# response & request
type CommonResponse {
    code: String!
    success: Boolean!
    message: String!
}

input UserRegisterRequest {
    username: String!
    email: String!
    password: String!
    fullname: String!
    address: String
    province_id: Int
    city_id: Int
    district_id: Int
}

type UserRegisterResponse {
    response: CommonResponse
    token: String!
}

type LoginResponse {
    response: CommonResponse
    token: String!
}

# models
type User {
    id: ID
    username: String
    email: String
    created_at: String
    updated_at: String

    details: UserDetail
    response: CommonResponse
}

type UserDetail {
    id: ID
    user_id: ID
    fullname: String
    address: String
    postal_code: String
    province: Province
    district: District
    city: City
    created_at: String
    updated_at: String
}

type Province {
    id: ID!
    name: String!
}

type District {
    id: ID!
    name: String!
}

type City {
    id: ID!
    name: String!
}

# action
type Query {
    profile: User
}

type Mutation {
    register(user: UserRegisterRequest): UserRegisterResponse
    login(username: String!, password: String!): LoginResponse
    logout(token: String!): CommonResponse
}